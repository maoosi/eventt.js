{"version":3,"file":"eventt.js","sources":["../src/eventt.js"],"sourcesContent":["class Eventt {\n\n    /**\n        --- CORE ---\n    **/\n\n    constructor (options = {}) {\n    // instance constructor\n        this.options = {\n            debug: options.debug || false\n        }\n\n        this.debug = this.options.debug\n        this.events = []\n\n        return this\n    }\n\n    /**\n        --- API ---\n    **/\n\n    listen (type, selector, func, opts = null) {\n    // add events listeners\n        if (type !== undefined && selector !== undefined && typeof func === 'function') {\n            let types = this._toArray(type)\n            let selectors = this._toArray(selector)\n            let options = null\n\n            if (typeof opts === 'boolean') options = { capture: opts }\n            else if (typeof opts === 'object') options = opts\n\n            selectors.forEach((_selector) => {\n                let targets = typeof _selector === 'string' ?\n                    document.querySelectorAll(_selector) : this._toArray(_selector)\n\n                targets.forEach((_target) => {\n                    types.forEach((_type) => {\n\n                        let event = {\n                            targetElem: _target,\n                            eventType: _type,\n                            func: func,\n                            opts: options\n                        }\n\n                        this._addEvent(event)\n                        this.events.push(event)\n\n                        this._debug('info', `Add eventListener ${ _type } on ${ _target.outerHTML }.`)\n\n                    })\n                })\n            })\n        } else {\n            this._debug('error', 'Wrong parameters for the `listen()` method.')\n        }\n\n        return this\n    }\n\n    unlisten (type, selector = '*') {\n    // remove events listeners\n        if (type !== undefined) {\n            let types = this._toArray(type)\n            let selectors = this._toArray(selector)\n            let removables = []\n\n            this.events.forEach((_event) => {\n                let isTarget = this._isTarget(_event.targetElem, selectors)\n                let isType = this._isType(_event.eventType, types)\n\n                if (isTarget && isType) {\n                    removables.push(_event)\n                    this._removeEvent(_event)\n                    this._debug('info', `Remove eventListener ${ _event.eventType } on ${ _event.targetElem.outerHTML }.`)\n                }\n            })\n\n            this.events = this.events.filter(event => !removables.includes(event))\n        } else {\n            this._debug('error', 'Wrong parameters for the `unlisten()` method.')\n        }\n\n        return this\n    }\n\n    trigger (type, selector = '*') {\n    // trigger events listeners\n        if (type !== undefined && selector !== undefined) {\n            let types = this._toArray(type)\n            let selectors = this._toArray(selector)\n\n            this.events.forEach((_event) => {\n                let isTarget = this._isTarget(_event.targetElem, selectors)\n                let isType = this._isType(_event.eventType, types)\n\n                if (isTarget && isType) {\n                    this._triggerEvent(_event)\n                    this._debug('info', `Trigger eventListener ${ _event.eventType } on ${ _event.targetElem.outerHTML }.`)\n                }\n            })\n        } else {\n            this._debug('error', 'Wrong parameters for the `trigger()` method.')\n        }\n\n        return this\n    }\n\n    list (selector, callback) {\n    // get events listeners\n        if (selector !== undefined && callback !== undefined) {\n            let selectors = this._toArray(selector)\n            let eventsList = []\n\n            this.events.forEach((_event) => {\n                let isTarget = this._isTarget(_event.targetElem, selectors)\n\n                if (isTarget) {\n                    eventsList.push(_event)\n                    this._debug('info', `Get eventListener ${ _event.eventType } on ${ _event.targetElem.outerHTML }.`)\n                }\n            })\n\n            callback.call(this, eventsList)\n        } else {\n            this._debug('error', 'Wrong parameters for the `get()` method.')\n        }\n\n        return this\n    }\n\n    /**\n        --- FUNCTIONS ---\n    **/\n\n    _addEvent (event) {\n    // add event listener\n        event.targetElem.addEventListener(event.eventType, event.func, event.opts || false)\n    }\n\n    _removeEvent (event) {\n    // remove event listener\n        event.targetElem.removeEventListener(event.eventType, event.func, event.opts || false)\n    }\n\n    _triggerEvent (event) {\n    // trigger event\n        event.func.call(this)\n    }\n\n    _isTarget(target, selectors) {\n    // return true if target is part of selectors\n        if (selectors[0] === '*') return true\n        let found = false\n\n        selectors.forEach((selector) => {\n            let targets = typeof selector === 'string' ?\n                document.querySelectorAll(selector) : this._toArray(selector)\n\n            targets.forEach((el) => {\n                if (el === target) found = true\n            })\n        })\n\n        return found\n    }\n\n    _isType(type, types) {\n    // return true if type is part of types\n        return types[0] === '*' || types.includes(type)\n    }\n\n    _toArray (data) {\n    // convert the data passed to an array\n        return Array.isArray(data) ? data : [data]\n    }\n\n    _debug (type, message) {\n    // log errors\n        if (this.debug) {\n            /* eslint-disable no-console */\n            console.debug(`> Eventt.js | ${ type } :: ${ message }`)\n        }\n    }\n\n}\n\nexport default (...args) => { return new Eventt(...args) }\n"],"names":["Eventt","options","debug","this","events","type","selector","func","opts","undefined","types","_toArray","selectors","capture","forEach","_selector","targets","document","querySelectorAll","_this","_target","_type","event","_addEvent","push","_debug","outerHTML","removables","_event","isTarget","_this2","_isTarget","targetElem","isType","_isType","eventType","_removeEvent","filter","includes","_this3","_triggerEvent","callback","eventsList","_this4","call","addEventListener","removeEventListener","target","found","_this5","el","data","Array","isArray","message","args"],"mappings":";;;;;;;;;stBAAMA,6BAMWC,mFAEJA,eACMA,EAAQC,QAAS,QAGvBA,MAAQC,KAAKF,QAAQC,WACrBE,UAEED,8CAOHE,EAAMC,EAAUC,cAAMC,yDAAO,QAEpBC,SAATJ,GAAmCI,SAAbH,GAA0C,kBAATC,GAAqB,IACxEG,GAAQP,KAAKQ,SAASN,GACtBO,EAAYT,KAAKQ,SAASL,GAC1BL,EAAU,IAEM,kBAATO,GAAoBP,GAAYY,QAASL,GAC3B,+BAATA,iBAAAA,MAAmBP,EAAUO,KAEnCM,QAAQ,SAACC,MACXC,GAA+B,gBAAdD,GACjBE,SAASC,iBAAiBH,GAAaI,EAAKR,SAASI,KAEjDD,QAAQ,SAACM,KACPN,QAAQ,SAACO,MAEPC,eACYF,YACDC,OACLd,OACAN,KAGLsB,UAAUD,KACVlB,OAAOoB,KAAKF,KAEZG,OAAO,4BAA8BJ,SAAcD,EAAQM,+BAMvED,OAAO,QAAS,qDAGlBtB,uCAGDE,cAAMC,yDAAW,OAEVG,SAATJ,EAAoB,IAChBK,GAAQP,KAAKQ,SAASN,GACtBO,EAAYT,KAAKQ,SAASL,GAC1BqB,UAECvB,OAAOU,QAAQ,SAACc,MACbC,GAAWC,EAAKC,UAAUH,EAAOI,WAAYpB,GAC7CqB,EAASH,EAAKI,QAAQN,EAAOO,UAAWzB,EAExCmB,IAAYI,MACDT,KAAKI,KACXQ,aAAaR,KACbH,OAAO,+BAAiCG,EAAOO,iBAAkBP,EAAOI,WAAWN,uBAI3FtB,OAASD,KAAKC,OAAOiC,OAAO,mBAAUV,EAAWW,SAAShB,eAE1DG,OAAO,QAAS,uDAGlBtB,sCAGFE,cAAMC,yDAAW,OAETG,SAATJ,GAAmCI,SAAbH,EAAwB,IAC1CI,GAAQP,KAAKQ,SAASN,GACtBO,EAAYT,KAAKQ,SAASL,QAEzBF,OAAOU,QAAQ,SAACc,MACbC,GAAWU,EAAKR,UAAUH,EAAOI,WAAYpB,GAC7CqB,EAASM,EAAKL,QAAQN,EAAOO,UAAWzB,EAExCmB,IAAYI,MACPO,cAAcZ,KACdH,OAAO,gCAAkCG,EAAOO,iBAAkBP,EAAOI,WAAWN,4BAI5FD,OAAO,QAAS,sDAGlBtB,mCAGLG,EAAUmC,iBAEKhC,SAAbH,GAAuCG,SAAbgC,EAAwB,IAC9C7B,GAAYT,KAAKQ,SAASL,GAC1BoC,UAECtC,OAAOU,QAAQ,SAACc,MACbC,GAAWc,EAAKZ,UAAUH,EAAOI,WAAYpB,EAE7CiB,OACWL,KAAKI,KACXH,OAAO,4BAA8BG,EAAOO,iBAAkBP,EAAOI,WAAWN,oBAIpFkB,KAAKzC,KAAMuC,aAEfjB,OAAO,QAAS,kDAGlBtB,wCAOAmB,KAEDU,WAAWa,iBAAiBvB,EAAMa,UAAWb,EAAMf,KAAMe,EAAMd,OAAQ,wCAGnEc,KAEJU,WAAWc,oBAAoBxB,EAAMa,UAAWb,EAAMf,KAAMe,EAAMd,OAAQ,yCAGrEc,KAELf,KAAKqC,KAAKzC,wCAGV4C,EAAQnC,iBAEO,MAAjBA,EAAU,GAAY,OAAO,KAC7BoC,IAAQ,WAEFlC,QAAQ,SAACR,MACXU,GAA8B,gBAAbV,GACjBW,SAASC,iBAAiBZ,GAAY2C,EAAKtC,SAASL,KAEhDQ,QAAQ,SAACoC,GACTA,IAAOH,IAAQC,GAAQ,OAI5BA,kCAGH3C,EAAMK,SAEU,MAAbA,EAAM,IAAcA,EAAM4B,SAASjC,oCAGpC8C,SAECC,OAAMC,QAAQF,GAAQA,GAAQA,kCAGjC9C,EAAMiD,GAENnD,KAAKD,eAEGA,uBAAwBG,SAAaiD,cAM1C,sCAAIC,kFAAsBvD,gBAAUuD"}