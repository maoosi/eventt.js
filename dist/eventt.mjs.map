{"version":3,"file":"eventt.mjs","sources":["../src/eventt.js"],"sourcesContent":["export default class Eventt {\n\n    /**\n        --- CORE ---\n    **/\n\n    constructor (options = {}) {\n    // instance constructor\n        this.options = {\n            debug: options.debug || false\n        }\n\n        this.debug = this.options.debug\n        this.events = []\n\n        return this\n    }\n\n    /**\n        --- API ---\n    **/\n\n    listen (type, selector, func, opts = false) {\n    // add events listeners\n        if (type !== undefined && selector !== undefined && typeof func === 'function') {\n            let types = this._toArray(type)\n            let selectors = this._toArray(selector)\n\n            selectors.forEach((_selector) => {\n                let targets = document.querySelectorAll(_selector)\n\n                targets.forEach((_target) => {\n                    types.forEach((_type) => {\n\n                        let event = {\n                            targetElem: _target,\n                            eventType: _type,\n                            func: func,\n                            opts: opts\n                        }\n\n                        this._addEvent(event)\n                        this.events.push(event)\n\n                        this._debug('info', `Add eventListener ${ _type } on ${ _target.outerHTML }.`)\n\n                    })\n                })\n            })\n        } else {\n            this._debug('error', 'Wrong parameters for the `listen()` method.')\n        }\n\n        return this\n    }\n\n    unlisten (type, selector = '*') {\n    // remove events listeners\n        if (type !== undefined) {\n            let types = this._toArray(type)\n            let selectors = this._toArray(selector)\n            let removables = []\n\n            this.events.forEach((_event) => {\n                let isTarget = this._isTarget(_event.targetElem, selectors)\n                let isType = this._isType(_event.eventType, types)\n\n                if (isTarget && isType) {\n                    removables.push(_event)\n                    this._removeEvent(_event)\n                    this._debug('info', `Remove eventListener ${ _event.eventType } on ${ _event.targetElem.outerHTML }.`)\n                }\n            })\n\n            this.events = this.events.filter(event => !removables.includes(event))\n        } else {\n            this._debug('error', 'Wrong parameters for the `unlisten()` method.')\n        }\n\n        return this\n    }\n\n    trigger (type, selector) {\n    // trigger events listeners\n        if (type !== undefined && selector !== undefined) {\n            let types = this._toArray(type)\n            let selectors = this._toArray(selector)\n\n            this.events.forEach((_event) => {\n                let isTarget = this._isTarget(_event.targetElem, selectors)\n                let isType = this._isType(_event.eventType, types)\n\n                if (isTarget && isType) {\n                    this._triggerEvent(_event)\n                    this._debug('info', `Trigger eventListener ${ _event.eventType } on ${ _event.targetElem.outerHTML }.`)\n                }\n            })\n        } else {\n            this._debug('error', 'Wrong parameters for the `trigger()` method.')\n        }\n\n        return this\n    }\n\n    /**\n        --- FUNCTIONS ---\n    **/\n\n    _addEvent (event) {\n    // add event listener\n        event.targetElem.addEventListener(event.eventType, event.func, event.opts || false)\n    }\n\n    _removeEvent (event) {\n    // remove event listener=\n        event.targetElem.removeEventListener(event.eventType, event.func, event.opts || false)\n    }\n\n    _triggerEvent (event) {\n    // trigger event\n        event.func.call(this)\n    }\n\n    _isTarget(target, selectors) {\n    // return true if target is part of selectors\n        if (selectors[0] === '*') return true\n\n        let found = false\n        let targets = document.querySelectorAll(selectors)\n\n        targets.forEach((el) => {\n            if (el === target) found = true\n        })\n\n        return found\n    }\n\n    _isType(type, types) {\n    // return true if type is part of types\n        return types[0] === '*' || types.includes(type)\n    }\n\n    _toArray (data) {\n    // convert the data passed to an array\n        return typeof data === 'string' ? [data] : data\n    }\n\n    _debug (type, message) {\n    // log errors\n        if (this.debug) {\n            /* eslint-disable no-console */\n            console.log(`> Eventt.js | ${ type } :: ${ message }`)\n        }\n    }\n\n}\n"],"names":["Eventt","options","debug","this","events","type","selector","func","opts","undefined","types","_toArray","selectors","forEach","_selector","targets","document","querySelectorAll","_target","_type","event","_addEvent","push","_debug","outerHTML","removables","_event","isTarget","_this2","_isTarget","targetElem","isType","_isType","eventType","_removeEvent","filter","includes","_this3","_triggerEvent","addEventListener","removeEventListener","call","target","found","el","data","message","log"],"mappings":";;;;;;;;;+WAAqBA,kCAMJC,gGAEJA,eACMA,EAAQC,QAAS,QAGvBA,MAAQC,KAAKF,QAAQC,WACrBE,UAEED,wDAOHE,EAAMC,EAAUC,cAAMC,6DAEbC,SAATJ,GAAmCI,SAAbH,GAA0C,kBAATC,GAAqB,IACxEG,GAAQP,KAAKQ,SAASN,GACtBO,EAAYT,KAAKQ,SAASL,KAEpBO,QAAQ,SAACC,MACXC,GAAUC,SAASC,iBAAiBH,KAEhCD,QAAQ,SAACK,KACPL,QAAQ,SAACM,MAEPC,eACYF,YACDC,OACLZ,OACAC,KAGLa,UAAUD,KACVhB,OAAOkB,KAAKF,KAEZG,OAAO,4BAA8BJ,SAAcD,EAAQM,+BAMvED,OAAO,QAAS,qDAGlBpB,uCAGDE,cAAMC,yDAAW,OAEVG,SAATJ,EAAoB,IAChBK,GAAQP,KAAKQ,SAASN,GACtBO,EAAYT,KAAKQ,SAASL,GAC1BmB,UAECrB,OAAOS,QAAQ,SAACa,MACbC,GAAWC,EAAKC,UAAUH,EAAOI,WAAYlB,GAC7CmB,EAASH,EAAKI,QAAQN,EAAOO,UAAWvB,EAExCiB,IAAYI,MACDT,KAAKI,KACXQ,aAAaR,KACbH,OAAO,+BAAiCG,EAAOO,iBAAkBP,EAAOI,WAAWN,uBAI3FpB,OAASD,KAAKC,OAAO+B,OAAO,mBAAUV,EAAWW,SAAShB,eAE1DG,OAAO,QAAS,uDAGlBpB,sCAGFE,EAAMC,iBAEEG,SAATJ,GAAmCI,SAAbH,EAAwB,IAC1CI,GAAQP,KAAKQ,SAASN,GACtBO,EAAYT,KAAKQ,SAASL,QAEzBF,OAAOS,QAAQ,SAACa,MACbC,GAAWU,EAAKR,UAAUH,EAAOI,WAAYlB,GAC7CmB,EAASM,EAAKL,QAAQN,EAAOO,UAAWvB,EAExCiB,IAAYI,MACPO,cAAcZ,KACdH,OAAO,gCAAkCG,EAAOO,iBAAkBP,EAAOI,WAAWN,4BAI5FD,OAAO,QAAS,sDAGlBpB,wCAOAiB,KAEDU,WAAWS,iBAAiBnB,EAAMa,UAAWb,EAAMb,KAAMa,EAAMZ,OAAQ,wCAGnEY,KAEJU,WAAWU,oBAAoBpB,EAAMa,UAAWb,EAAMb,KAAMa,EAAMZ,OAAQ,yCAGrEY,KAELb,KAAKkC,KAAKtC,wCAGVuC,EAAQ9B,MAEO,MAAjBA,EAAU,GAAY,OAAO,KAE7B+B,IAAQ,EACR5B,EAAUC,SAASC,iBAAiBL,YAEhCC,QAAQ,SAAC+B,GACTA,IAAOF,IAAQC,GAAQ,KAGxBA,kCAGHtC,EAAMK,SAEU,MAAbA,EAAM,IAAcA,EAAM0B,SAAS/B,oCAGpCwC,SAEiB,gBAATA,IAAqBA,GAAQA,iCAGvCxC,EAAMyC,GAEN3C,KAAKD,eAEG6C,qBAAsB1C,SAAayC"}